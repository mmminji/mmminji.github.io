---
layout: post
title:  "github 블로그 만들기"
date:   2021-02-15 18:50:15
categories: github.io Jekyll Ruby
---
"하나씩 꾸미면서 글을 작성한다는 것에 겁먹고 시작하지 못했던 일"

다른 블로그에 비해 알아야 할 것이 많아 미뤄왔던 Github 블로그를 드디어 시작해보려고 한다. \^o^/

내가 블로그를 하고 싶었던 이유는 나만의 템플릿을 만들고 싶었기 때문이다. 검색을 하다보면 하나의 글만으로 내가 원하는 것을 해결하기는 어려웠다. 그럴때마다 여러 블로그를 돌아다니며 시도해보고 매번 같은 블로그를 열었다 닫으며 고생했던 적이 많다. 그래서 내가 하는 모든 과정을 블로그로 기록하여 **나중에 똑같은 과정을 반복할 나에게, 나와 같은 고민을 하는 사람들에게** 가이드를 제공하고 싶었다. 앞으로의 포스팅은 무언가 인수인계하듯이 모든 과정을 하나씩 기록해나갈 예정이다.

본격적으로 첫 게시물인만큼 이 글을 쓰기까지의 과정, 즉 Github 블로그 만들기를 하나씩 소개해보려고 한다.


## 1. Repository 생성

![](https://github.com/mmminji/mmminji.github.io/blob/main/assets/post_pics/Create_a_new_repository.PNG?raw=true){: width="700" height="700"}

새로운 repository 이름을 [아이디].github.io로 지정하여 생성한다. README 파일은 자동으로 만들어 두면 편하다.

## 2. Clone

생성한 repository를 내 로컬로 가져와 clone시킨다. 개인의 깃허브 환경에 따라 다르지만 나는 Visual Studio Code를 활용하여 작업을 하고 있다.

F1버튼 --> `Git: Clone` --> `Clone from GitHub` --> 자신이 생성한 github.io 

clone시킬 폴더를 선택하면 해당 폴더에 repository(README파일포함)가 들어가진다.

## 3. Jekyll 테마 설치

Github 블로그는 처음부터 자신이 원하는대로 디자인할 수 있지만 Jekyll을 이용하면 이미 만들어진 테마를 쉽게 디자인할 수 있다. [Jekyll 테마](http://jekyllthemes.org/) 사이트에서 원하는 테마를 선택하여 다운로드 한다. 이 중에서 내가 선택한 테마는 [Plainwhite](http://jekyllthemes.org/themes/PlainWhite-Jekyll/)이다. 

![](https://github.com/mmminji/mmminji.github.io/blob/main/assets/post_pics/jekyll_themes_plainwhite.PNG?raw=true){: width="700" height="500"}

다운받은 파일을 압축을 풀고 아까 clone한 폴더에 모든 파일을 옮긴다.

![](https://github.com/mmminji/mmminji.github.io/blob/main/assets/post_pics/clone_folder.PNG?raw=true){: width="400" height="600"}

## 4. Ruby 설치

Jekyll이 Ruby로 만들어졌기 때문에 윈도우 OS의 경우 Ruby Devkit이 필요하다. [Ruby Installer](https://rubyinstaller.org/downloads/) 사이트에서 => 표시된 Ruby+Devkit를 설치한다.

![](https://github.com/mmminji/mmminji.github.io/blob/main/assets/post_pics/ruby_installer.PNG?raw=true){: width="900" height="600"}

## 5. Jekyll 설치

3번에서는 Jekyll 테마를 설치했을 뿐이고, 이번에는 Ruby를 통해 Jekyll을 설치해야 한다.

![](https://github.com/mmminji/mmminji.github.io/blob/main/assets/post_pics/command_ruby.png?raw=true){: width="700" height="400"}

Ruby 콘솔창에서 repository가 있는 폴더로 들어간 후, 다음 명령어로 Jekyll에 필요한 패키지들을 설치한다.

```python
gem install jekyll
gem install minima
gem install bundler
gem install jekyll-feed
gem install tzinfo-data
```

## 6. 테마 적용하기

테마를 적용하기 전에 `_config.yml`을 자신의 정보에 맞춰 수정해주어야 한다. ~~그렇지 않으면 이 테마의 제작자인 사람의 블로그가 만들어질 것이다.~~ 나는 기본적인 `title`, `name`, `tagline`, `portfolio_image`, `html_lang`, `social_links` 정도만 바꿔주었다. 나중에 차차 하나씩 수정할 예정이다. 정보를 수정했으면 지금까지 파일들을 Github에 push 해주면 끝이다.

간단하게 vscode에서 push 하는 방법을 소개하자면 아래 그림 순서에 맞춰서 하면 된다. (2번에서 이미 클론한 상태라고 가정)

![](https://github.com/mmminji/mmminji.github.io/blob/main/assets/post_pics/vscode_git_push.png?raw=true){: width="600" height="600"}

여기까지 하면 나만의 Github 블로그를 시작할 수 있다. 막상 해보면 어렵진 않지만 여러 가지를 찾아봐야한다는 진입장벽이 있는 것 같다.

이 글을 통해서 다른 누군가도 블로그를 시작하길 바라며 마친다.

### Update Tips
- _config.yml 파일에서 plainwhite 하위에 disqus_shortname: [disqus id]를 추가하면 아래 댓글창을 만들 수 있다.
- _config.yml 파일에서 `theme`를 [공식 페이지](pages.github.com/themes/)에서 골라 적어놓으면(가짜) warning 메일이 오지 않는다.





